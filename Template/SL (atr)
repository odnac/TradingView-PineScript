//@version=5
//@strategy_alert_message {{strategy.order.alert_message}}
// ************************************** POA ************************************** //
import dokang/POA/13 as POA

// 시작시간, 종료시간 설정
start_time = input.time(timestamp("2000-00-00T00:00:00+09:00"), title="자동매매 시작")                            // time
end_time = input.time(timestamp("2100-12-31T00:00:00+09:00"), title="자동매매 종료")

// 포아봇 설정
pstrategy = POA.bot.new(, start_time, end_time, leverage = )                                                    // "password" // leverage
pstrategy.start_trade()
// ********************************************************************************* //

strategy("SL (atr)",
 overlay = true, 
 initial_capital = ,                                                                                            // capital
 default_qty_type = strategy.percent_of_equity, 
 default_qty_value = 100, 
 commission_type = strategy.commission.percent, 
 commission_value = ,                                                                                           // binance 0.045 bitget 0.04 upbit 0.05
 process_orders_on_close = true)

///////////////////////////////////////////// input /////////////////////////////////////////////
long_limit = input(2, "롱 익절 (%))")
long_stop = input(2, "롱 손절 (%))")

short_limit = input(2, "숏 익절 (%))")
short_stop = input(2, "숏 손절 (%))")

///////////////////////////////////////////// 전략 /////////////////////////////////////////////
atr_multi = input(3.0, "atr multiple")                                                                                            
atr_length = input.int(title="atr length", defval=14, minval=1)
atr_up = close + atr_multi * ta.ema(ta.tr(true), atr_length)
atr_down = close - atr_multi * ta.ema(ta.tr(true), atr_length)
plot(atr_up) //, style = plot.style_steplinebr)
plot(atr_down) //, style = plot.style_steplinebr)

///////////////////////////////////////////// s /////////////////////////////////////////////
is_long = 
is_long_close = 
var is_long_stop = 0.0
var is_long_limit = 0.0

is_short = 
is_short_close = 
var is_short_stop = 0.0
var is_short_limit = 0.0

if is_long
    is_long_stop := atr_down
    is_long_limit := atr_up
    pstrategy.entry("long", "strategy.long")

if is_long_close
    pstrategy.close("long")

pstrategy.exit("exit", "long", stop = is_long_stop, limit = is_long_limit)

if is_short
    is_short_stop := atr_up
    is_short_limit := atr_down
    pstrategy.entry("short", "strategy.short")

if is_short_close
    pstrategy.close("short", stop = , limit = )

pstrategy.exit("exit", "short", stop = is_short_stop, , limit = is_short_limit)

