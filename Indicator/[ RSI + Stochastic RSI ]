//@version=5
indicator("[ RSI + Stochastic RSI ]")


///////////////////////////////////////////////// RSI /////////////////////////////////////////////////

rsi_high_line = input.int(70, minval = 50, maxval = 100)
rsi_low_line = input.int(30, minval = 0, maxval = 50)
hline(rsi_high_line, linestyle = hline.style_dotted, color = color.rgb(255, 70, 70, 50), title = "rsi_high")
hline(50, linestyle = hline.style_dotted, color = color.rgb(255, 255, 255, 50), title = "mid")
hline(rsi_low_line, linestyle = hline.style_dotted, color = color.rgb(255, 70, 70, 50), title = "rsi_low")

rsi_period = input.int(14, minval=1)
rsi = ta.rsi(close, rsi_period)

rsi_line_color = rsi <= rsi_low_line ?color.rgb(250, 70, 70) : ( rsi >= rsi_high_line ? color.rgb(70, 250, 70) :color.rgb(255, 255, 255,70))
plot(rsi, color = rsi_line_color, trackprice = true) //trackprice = true


ma(source, length, type) =>
    switch type
        "SMA" => ta.sma(source, length)
        "Bollinger Bands" => ta.sma(source, length)
        "EMA" => ta.ema(source, length)
        "SMMA (RMA)" => ta.rma(source, length)
        "WMA" => ta.wma(source, length)
        "VWMA" => ta.vwma(source, length)

rsiLengthInput = input.int(14, minval=1, title="RSI Length", group="RSI Settings")
rsiSourceInput = input.source(close, "Source", group="RSI Settings")
maTypeInput = input.string("SMA", title="MA Type", options=["SMA", "Bollinger Bands", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group="MA Settings")
maLengthInput = input.int(14, title="MA Length", group="MA Settings")
bbMultInput = input.float(2.0, minval=0.001, maxval=50, title="BB StdDev", group="MA Settings")

up = ta.rma(math.max(ta.change(rsiSourceInput), 0), rsiLengthInput)
down = ta.rma(-math.min(ta.change(rsiSourceInput), 0), rsiLengthInput)
rsi1 = down == 0 ? 100 : up == 0 ? 0 : 100 - (100 / (1 + up / down))
rsiMA = ma(rsi, maLengthInput, maTypeInput)
isBB = maTypeInput == "Bollinger Bands"
plot(rsiMA, "RSI-based MA", color=color.rgb(255, 235, 59, 70))


///////////////////////////////////////////////// Stochastic RSI /////////////////////////////////////////////////
S_RSI_high_line = input.int(80, minval = 50, maxval = 100)
S_RSI_low_line = input.int(20, minval = 0, maxval = 50)
hline(S_RSI_high_line, "Upper Band", color=color.rgb(33, 149, 243, 50), linestyle = hline.style_dotted)
hline(S_RSI_low_line, "Lower Band", color=color.rgb(33, 149, 243, 50), linestyle = hline.style_dotted)

S_RSI_smoothK = input.int(3, "K", minval=1)
S_RSI_smoothD = input.int(3, "D", minval=1)
S_RSI_lengthRSI = input.int(14, "RSI Length", minval=1)
S_RSI_lengthStoch = input.int(14, "Stochastic Length", minval=1)
S_RSI_src = input(close, title="RSI Source")
S_RSI_rsi1 = ta.rsi(S_RSI_src, S_RSI_lengthRSI)
S_RSI_k = ta.sma(ta.stoch(S_RSI_rsi1, S_RSI_rsi1, S_RSI_rsi1, S_RSI_lengthStoch), S_RSI_smoothK)
S_RSI_d = ta.sma(S_RSI_k, S_RSI_smoothD)

S_RSI_k_color = S_RSI_k <= S_RSI_low_line ? color.blue : ( S_RSI_k >= S_RSI_high_line ? color.blue :color.rgb(33, 149, 243, 70))
S_RSI_d_color = S_RSI_d <= S_RSI_low_line ? color.orange : ( S_RSI_d >= S_RSI_high_line ? color.orange :color.rgb(255, 153, 0, 70))

plot(S_RSI_k, "K", color = S_RSI_k_color)
plot(S_RSI_d, "D", color = S_RSI_d_color)

