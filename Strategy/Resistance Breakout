//@version=5
//@strategy_alert_message {{strategy.order.alert_message}}
// ************************************** POA ************************************** //
import dokang/POA/12 as POA

start_time = input.time(timestamp("2024-01-01T00:00:00+09:00"), title="start")
end_time = input.time(timestamp("2100-08-31T01:07:00+09:00"), title="end")

pstrategy = POA.bot.new("", start_time, end_time, exit_percent = 100, close_percent = 100)
pstrategy.start_trade()
// ********************************************************************************* //

strategy("Resistance Breakout 1H", 
 overlay = true, 
 initial_capital = 100, 
 default_qty_type = strategy.percent_of_equity, 
 default_qty_value = 100,
 process_orders_on_close = true, 
 commission_type = strategy.commission.percent, 
 commission_value = 0.045)

// resistance
input_left = input(48, "resistance_length")

resistance_line = fixnan(ta.pivothigh(close, input_left, na)[1])
plot(resistance_line, color = ta.change(resistance_line) ? na : #ffffff, linewidth=2, title="Resistance")

// volume
volume_length = input(20, "volume_length")
input_multi = input(3.0, "volume_multiple")
volume_line = ta.sma(volume, volume_length)

long_clean = input(48, "close")
standard_long_close = ta.lowest(close, long_clean)[1]
plot(standard_long_close, color = color.rgb(255, 255, 255, 50))

// strategy
is_long = ta.crossover(close, resistance_line) and volume > volume_line * input_multi
is_long_close = ta.crossunder(close, standard_long_close)
long_sl = input(2.0, "long stoploss (%))")
is_long_exit = strategy.position_avg_price * ( ( 100 - long_sl ) / 100 )

if is_long
    pstrategy.entry("Resistance Breakout 1H", "strategy.long")

if is_long_close
    pstrategy.close("Resistance Breakout 1H")

pstrategy.exit("exit", "Resistance Breakout 1H", stop = is_long_exit)