//@version=5
//@strategy_alert_message {{strategy.order.alert_message}}
// ************************************** POA ************************************** //
import dokang/POA/12 as POA

start_time = input.time(timestamp("2024-01-01T00:00:00+09:00"), title="start")
end_time = input.time(timestamp("2100-08-31T01:07:00+09:00"), title="end")

pstrategy = POA.bot.new("", start_time, end_time, exit_percent = 100, close_percent = 100)
pstrategy.start_trade()
// ********************************************************************************* //

strategy("EMA + ATR 1h",
 overlay=true, 
 initial_capital = 100, 
 default_qty_type = strategy.percent_of_equity, 
 default_qty_value = 100, 
 process_orders_on_close = true,  
 commission_type = strategy.commission.percent, 
 commission_value = 0.045)

///////////////////////////////////////////// input /////////////////////////////////////////////
long_sl = input(2.0, "long stop (%))")

medium_length = input(24, "medium length")
trend_length = input(168, "trend length")

medium_ema = ta.ema(close, medium_length)
trend_ema = ta.ema(close, trend_length)

plot(medium_ema, "medium", color = color.yellow)
plot(trend_ema, "trend", color.white)

///////////////////////////////////////////// atr /////////////////////////////////////////////
atr_length = input.int(title="ATR_Length", defval=24, minval=1)
pine_atr(length) =>
    trueRange = na(high[1])? high-low : math.max(math.max(high - low, math.abs(high - close[1])), math.abs(low - close[1]))
    ta.ema(trueRange, length)

atr_val = pine_atr(atr_length)

plot(medium_ema + (2 * atr_val))
plot(medium_ema - (2 * atr_val))

plot(medium_ema + atr_val, color = color.green)
plot(medium_ema - atr_val, color = color.green)

///////////////////////////////////////////// strategy /////////////////////////////////////////////
trend_long = medium_ema > trend_ema
trend_short = medium_ema < trend_ema

is_long = ta.crossover(close, medium_ema + (2 * atr_val)) and trend_long
is_long_close = ta.crossunder(close, close[1] - atr_val[1])
is_long_exit = strategy.position_avg_price * ( ( 100 - long_sl ) / 100 )

if is_long 
    pstrategy.entry("EMA + ATR 1h long", "strategy.long")

if is_long_close 
    pstrategy.close("EMA + ATR 1h long")

pstrategy.exit("EMA + ATR 1h exit", "EMA + ATR 1h long", stop = is_long_exit)