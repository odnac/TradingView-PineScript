//@version=5
strategy("터틀 (1)", overlay=true, default_qty_value = 100, default_qty_type = strategy.percent_of_equity, initial_capital = 1000000, commission_type = strategy.commission.percent, commission_value = 0.04)


//////////// 롱 시그널 ////////////

long_enter_20 = ta.highest(close, 20)[1]
long_close_20 = ta.lowest(close, 10)[1]
// long_enter_55 = ta.highest(close, 55)[1]
// long_close_55 = ta.lowest(close, 20)[1]

plot(long_enter_20, color = color.rgb(0, 230, 119, 80), linewidth = 2)
plot(long_close_20, color = color.rgb(0, 230, 119, 80), linewidth = 2)
// plot(long_enter_55, color = color.rgb(0, 230, 119, 60), linewidth = 2)
// plot(long_close_55, color = color.rgb(0, 230, 119, 60), linewidth = 2)

turtle_long_signal_20 = ta.crossover(close, long_enter_20)
plotshape(series = turtle_long_signal_20, style = shape.arrowup, location = location.belowbar, color = color.rgb(255, 255, 255, 90), text = "tt20_L", size = size.tiny, textcolor = color.rgb(255, 255, 255, 60))
// turtle_long_signal_55 = ta.crossover(close, long_enter_55)
// plotshape(series = turtle_long_signal_55, style = shape.arrowup, location = location.belowbar, color = color.rgb(255, 255, 255, 90), text = "tt55_L", size = size.tiny, textcolor = color.rgb(255, 255, 255, 60))

turtle_close_long_signal_20 = ta.crossunder(close, long_close_20)
plotshape(series = turtle_close_long_signal_20, style = shape.arrowdown, location = location.abovebar, color = color.rgb(255, 255, 255, 90), text = "tt20_L_C", size = size.tiny, textcolor = color.rgb(255, 255, 255, 90))
// turtle_close_long_signal_55 = ta.crossunder(close, long_close_55)
// plotshape(series = turtle_close_long_signal_55, style = shape.arrowdown, location = location.abovebar, color = color.rgb(255, 255, 255, 90), text = "tt55_L_C", size = size.tiny, textcolor = color.rgb(255, 255, 255, 90))


//////////// 숏 시그널 ////////////

short_enter_20 = ta.lowest(close, 20)[1]
short_close_20 = ta.highest(close, 10)[1]
// short_enter_55 = ta.lowest(close, 55)[1]
// short_close_55 = ta.highest(close, 20)[1]

plot(short_enter_20, color = color.rgb(155, 39, 176, 70), linewidth = 2)
plot(short_close_20, color = color.rgb(155, 39, 176, 70), linewidth = 2)
// plot(short_enter_55, color = color.rgb(155, 39, 176, 50), linewidth = 2)
// plot(short_close_55, color = color.rgb(155, 39, 176, 50), linewidth = 2)

turtle_short_signal_20 = ta.crossunder(close, short_enter_20)
plotshape(series = turtle_short_signal_20, style = shape.arrowdown, location = location.abovebar, color = color.rgb(255, 255, 255, 90), text = "tt20_S", size = size.tiny, textcolor = color.rgb(255, 255, 255, 60))
// turtle_short_signal_55 = ta.crossunder(close, short_enter_55)
// plotshape(series = turtle_short_signal_55, style = shape.arrowdown, location = location.abovebar, color = color.rgb(255, 255, 255, 90), text = "tt55_S", size = size.tiny, textcolor = color.rgb(255, 255, 255, 60))

turtle_close_short_signal_20 = ta.crossover(close, short_close_20)
plotshape(series = turtle_close_short_signal_20, style = shape.arrowup, location = location.belowbar, color = color.rgb(255, 255, 255, 90), text = "tt20_S_C", size = size.tiny, textcolor = color.rgb(255, 255, 255, 90))

// turtle_close_short_signal_55 = ta.crossover(close, short_close_55)
// plotshape(series = turtle_close_short_signal_55, style = shape.arrowup, location = location.belowbar, color = color.rgb(255, 255, 255, 90), text = "tt55_S_C", size = size.tiny, textcolor = color.rgb(255, 255, 255, 90))


// 롱

if (ta.crossover(close, long_enter_20))
	strategy.entry("long", strategy.long)

else
    strategy.exit("exit", "long", stop = strategy.position_avg_price*0.99)

// if strategy.position_avg_price <= strategy.position_avg_price*0.99
//  strategy.cancel("long")

if (ta.crossunder(close, long_close_20))
    strategy.close("long")


// // 롱숏 숀절 1%

// if (ta.crossover(close, long_enter_20))
// 	strategy.entry("long", strategy.long)

// else
//     strategy.exit("exit", "long",stop = strategy.position_avg_price*0.99)
//     strategy.cancel("long")

// if (ta.crossunder(close, short_enter_20))
//     strategy.entry("short", strategy.short)
    
// else
//     strategy.exit("exit", "short",stop = strategy.position_avg_price*0.99)
//     strategy.cancel("short")




